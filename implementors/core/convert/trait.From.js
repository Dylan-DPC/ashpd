(function() {var implementors = {};
implementors["ashpd"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/desktop/device/enum.Device.html\" title=\"enum ashpd::desktop::device::Device\">Device</a>&gt; for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.str.html\">str</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/desktop/notification/enum.Priority.html\" title=\"enum ashpd::desktop::notification::Priority\">Priority</a>&gt; for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.str.html\">str</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/desktop/print/enum.Orientation.html\" title=\"enum ashpd::desktop::print::Orientation\">Orientation</a>&gt; for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.str.html\">str</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/desktop/print/enum.Quality.html\" title=\"enum ashpd::desktop::print::Quality\">Quality</a>&gt; for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.str.html\">str</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"ashpd/desktop/screenshot/struct.ColorResponse.html\" title=\"struct ashpd::desktop::screenshot::ColorResponse\">ColorResponse</a>&gt; for RGBA","synthetic":false,"types":["gdk::auto::rgba::RGBA"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"ashpd/desktop/screenshot/struct.ColorResponse.html\" title=\"struct ashpd::desktop::screenshot::ColorResponse\">ColorResponse</a>&gt; for RGBA","synthetic":false,"types":["gdk4::auto::rgba::RGBA"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/desktop/wallpaper/enum.SetOn.html\" title=\"enum ashpd::desktop::wallpaper::SetOn\">SetOn</a>&gt; for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.str.html\">str</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/documents/enum.Permission.html\" title=\"enum ashpd::documents::Permission\">Permission</a>&gt; for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.str.html\">str</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"ashpd/enum.PortalError.html\" title=\"enum ashpd::PortalError\">PortalError</a>","synthetic":false,"types":["ashpd::error::PortalError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/desktop/enum.ResponseError.html\" title=\"enum ashpd::desktop::ResponseError\">ResponseError</a>&gt; for <a class=\"enum\" href=\"ashpd/enum.Error.html\" title=\"enum ashpd::Error\">Error</a>","synthetic":false,"types":["ashpd::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ashpd/enum.PortalError.html\" title=\"enum ashpd::PortalError\">PortalError</a>&gt; for <a class=\"enum\" href=\"ashpd/enum.Error.html\" title=\"enum ashpd::Error\">Error</a>","synthetic":false,"types":["ashpd::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"ashpd/enum.Error.html\" title=\"enum ashpd::Error\">Error</a>","synthetic":false,"types":["ashpd::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"ashpd/enum.Error.html\" title=\"enum ashpd::Error\">Error</a>","synthetic":false,"types":["ashpd::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"ashpd/enum.Error.html\" title=\"enum ashpd::Error\">Error</a>","synthetic":false,"types":["ashpd::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"ashpd/enum.Error.html\" title=\"enum ashpd::Error\">Error</a>","synthetic":false,"types":["ashpd::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.64.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"ashpd/enum.Error.html\" title=\"enum ashpd::Error\">Error</a>","synthetic":false,"types":["ashpd::error::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()